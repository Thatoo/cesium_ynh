#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# Source YunoHost helpers
source /usr/share/yunohost/helpers

# Retrieve app settings
app=$YNH_APP_INSTANCE_NAME
domain=$(ynh_app_setting_get "$app" domain)
path=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)

### This helper will compare the version of the currently installed app and the version of the upstream package.
### $upgrade_type can have 2 different values
### - UPGRADE_APP if the upstream app version has changed
### - UPGRADE_PACKAGE if only the YunoHost package has changed
### ynh_check_app_version_changed will stop the upgrade if the app is up to date.
### UPGRADE_APP should be used to upgrade the core app only if there's an upgrade to do.
upgrade_type=$(ynh_check_app_version_changed)

# Remove trailing "/" for next commands
path=${path%/}

# Retreive sources and install them
src_path=/var/www/$app
if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	sudo rm -rf $src_path
	sudo mkdir -p $src_path
	ynh_script_progression --message="Upgrading source files..." --time --weight=1

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir=$src_path
	sudo chown -R www-data: $src_path
fi


# Modify Nginx configuration file and copy it to Nginx conf directory
nginx_conf=../conf/nginx.conf
sed -i "s@YNH_WWW_PATH@$path@g" $nginx_conf
sed -i "s@YNH_WWW_ALIAS@$src_path/@g" $nginx_conf
sudo cp $nginx_conf /etc/nginx/conf.d/$domain.d/$app.conf

# If app is public, add url to SSOWat conf as skipped_uris
if [[ $is_public -eq 1 ]]; then
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

# Reload nginx service
sudo service nginx reload
